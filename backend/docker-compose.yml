version: '3'
services:

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'something'
      MYSQL_ROOT_PASSWORD: 'something'
    ports:
      - '3307:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql
    networks:
     - static-network

  flyway:
    image: flyway/flyway
    command: -url=jdbc:mysql://db -schemas=vehicle_service -user=root -password=something -connectRetries=60 migrate
    volumes:
        - .:/flyway/sql
    depends_on:
        - db
    networks:
     - static-network

  flyway2:
    image: flyway/flyway
    command: -url=jdbc:mysql://db -schemas=user_service -user=root -password=something -connectRetries=60 migrate
    volumes:
        - .:/flyway/user_service
    depends_on:
        - db
    networks:
     - static-network
     
  flyway3:
    image: flyway/flyway
    command: -url=jdbc:mysql://db -schemas=order_service -user=root -password=something -connectRetries=60 migrate
    volumes:
        - .:/flyway/order_service
    depends_on:
        - db
    networks:
     - static-network
     
  flyway4:
    image: flyway/flyway
    command: -url=jdbc:mysql://db -schemas=customer_experience_service -user=root -password=something -connectRetries=60 migrate
    volumes:
        - .:/flyway/cusomer_experience_service
    depends_on:
        - db
    networks:
     - static-network
        
  eureka-server:
    image: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    tty: true
    ports: 
      - "8761:8761"
    networks:
      - static-network
      
  eureka-zuul:
    image: eureka-zuul
    build:
      context: ./services/eureka-zuul
      dockerfile: Dockerfile
    tty: true
    ports: 
      - "8080:8080"
    links:
      - eureka-server
    depends_on:
      - eureka-server
    environment:
        EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - static-network

  user-management:
    image: user-management
    build:
      context: ./services/user-management
      dockerfile: Dockerfile
    tty: true
    networks:
      - static-network
    links:
      - eureka-server
    depends_on:
      - eureka-server
      - db
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      
  vehicle-management:
    image: vehicle-management
    build:
      context: ./services/vehicle-management
      dockerfile: Dockerfile
    tty: true
    networks:
      - static-network
    links:
      - eureka-server
    depends_on:
      - eureka-server
      - db
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      
  order-processing:
    image: order-processing
    build:
      context: ./services/order-processing
      dockerfile: Dockerfile
    tty: true
    networks:
      - static-network
    links:
      - eureka-server
    depends_on:
      - eureka-server
      - db
      - kafka
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      
  soap-service:
    image: soap-service
    build:
      context: ./services/soap-service
      dockerfile: Dockerfile
    tty: true
    networks:
      - static-network
    links:
      - eureka-server
    depends_on:
      - eureka-server
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      
  customer-experience:
    image: customer-experience
    build:
      context: ./services/customer-experience
      dockerfile: Dockerfile
    tty: true
    networks:
      - static-network
    links:
      - eureka-server
    depends_on:
      - eureka-server
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      
  zookeeper: 
    image: wurstmeister/zookeeper
    ports:
        - "2181:2181"
    networks:
      - static-network
      
  kafka:
    image: wurstmeister/kafka
    ports: 
        - "9092:9092"
    networks:
      - static-network
    depends_on:
      - zookeeper
    environment:
        KAFKA_ADVERTISED_HOST_NAME: kafka
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_PORT: 9092
        

volumes:
  my-db:

networks:
  static-network:
    ipam:
      config:
        - subnet: 172.20.0.0/16
