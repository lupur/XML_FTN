version: '3'
services:

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'something'
      MYSQL_ROOT_PASSWORD: 'something'
    ports:
      - '3307:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql
    networks:
     - static-network

  flyway:
    image: flyway/flyway
    command: -url=jdbc:mysql://db -schemas=vehicle_service -user=root -password=something -connectRetries=60 migrate
    volumes:
        - .:/flyway/sql
    depends_on:
        - db
    networks:
     - static-network

  flyway2:
    image: flyway/flyway
    command: -url=jdbc:mysql://db -schemas=user_service -user=root -password=something -connectRetries=60 migrate
    volumes:
        - .:/flyway/user_service
    depends_on:
        - db
    networks:
     - static-network
     
  flyway3:
    image: flyway/flyway
    command: -url=jdbc:mysql://db -schemas=order_service -user=root -password=something -connectRetries=60 migrate
    volumes:
        - .:/flyway/order_service
    depends_on:
        - db
    networks:
     - static-network
        
  eureka-server:
    image: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    tty: true
    ports: 
      - "8761:8761"
    networks:
      - static-network
      
  eureka-zuul:
    image: eureka-zuul
    build:
      context: ./services/eureka-zuul
      dockerfile: Dockerfile
    tty: true
    ports: 
      - "8080:8080"
    links:
      - eureka-server
    depends_on:
      - eureka-server
    environment:
        EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - static-network

  user-management:
    image: user-management
    build:
      context: ./services/user-management
      dockerfile: Dockerfile
    tty: true
    networks:
      - static-network
    links:
      - eureka-server
    depends_on:
      - eureka-server
      - db
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      
  vehicle-management:
    image: vehicle-management
    build:
      context: ./services/vehicle-management
      dockerfile: Dockerfile
    tty: true
    networks:
      - static-network
    links:
      - eureka-server
    depends_on:
      - eureka-server
      - db
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      
  order-processing:
    image: order-processing
    build:
      context: ./services/order-processing
      dockerfile: Dockerfile
    tty: true
    networks:
      - static-network
    links:
      - eureka-server
    depends_on:
      - eureka-server
      - db
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      
  soap-service:
    image: soap-service
    build:
      context: ./services/soap-service
      dockerfile: Dockerfile
    tty: true
    networks:
      - static-network
    links:
      - eureka-server
    depends_on:
      - eureka-server
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./zk-single-kafka-single/zoo1/data:/data
      - ./zk-single-kafka-single/zoo1/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.5.0
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1

volumes:
  my-db:

networks:
  static-network:
    ipam:
      config:
        - subnet: 172.20.0.0/16
