// <auto-generated />
using System;
using CarRentalPortal.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarRentalPortal.Infrastructure.Persistence.Migrations.Application
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200615194700_CreateCarCategoryAndUpdateCarSchema")]
    partial class CreateCarCategoryAndUpdateCarSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("carrentalportal.application")
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CarRentalPortal.Core.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AgentContactInfo")
                        .HasColumnType("text");

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<float>("AverageRating")
                        .HasColumnType("float");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<int>("CarCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CarModel")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<int>("FuelType")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<long>("Mileage")
                        .HasColumnType("bigint");

                    b.Property<long?>("MileageConstraint")
                        .HasColumnType("bigint");

                    b.Property<byte>("NumberOfSeats")
                        .HasColumnType("tinyint");

                    b.Property<int>("PricelistId")
                        .HasColumnType("int");

                    b.Property<short>("ProductionYear")
                        .HasColumnType("smallint");

                    b.Property<int>("TransmissionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarCategoryId");

                    b.HasIndex("PricelistId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarRentalPortal.Core.Entities.CarCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CarCategory");
                });

            modelBuilder.Entity("CarRentalPortal.Core.Entities.CarImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CarAdId")
                        .HasColumnType("int");

                    b.Property<string>("Uri")
                        .HasColumnType("varchar(767)");

                    b.HasKey("Id");

                    b.HasIndex("CarAdId");

                    b.HasIndex("Uri")
                        .IsUnique();

                    b.ToTable("CarImages");
                });

            modelBuilder.Entity("CarRentalPortal.Core.Entities.Pricelist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("BasePrice")
                        .HasColumnType("double");

                    b.Property<double>("MileagePenaltyPrice")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Pricelists");
                });

            modelBuilder.Entity("CarRentalPortal.Core.Entities.Car", b =>
                {
                    b.HasOne("CarRentalPortal.Core.Entities.CarCategory", "CarCategory")
                        .WithMany("Cars")
                        .HasForeignKey("CarCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRentalPortal.Core.Entities.Pricelist", "Pricelist")
                        .WithMany("CarAds")
                        .HasForeignKey("PricelistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarRentalPortal.Core.Entities.CarImage", b =>
                {
                    b.HasOne("CarRentalPortal.Core.Entities.Car", "CarAd")
                        .WithMany("Images")
                        .HasForeignKey("CarAdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
